<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.metanet.educationSystem.mapper.StudentMapper">

	<resultMap type="java.util.HashMap" id="classInfo">
		<id column="classNO" property="classNO" />
		<result column="className" property="className" />
		<result column="classGoal" property="classGoal" />
		<result column="classSummary" property="classSummary" />
		<result column="classPersonnel" property="classPersonnel" />
		<result column="classCredit" property="classCredit" />
		<result column="classCurrentPersonnel" property="classCurrentPersonnel" />
		<association property="MemberVO" javaType="MemberVO">
			<result column="memberName" property="memberName" />
			<result column="memberEmail" property="memberEmail" />
			<result column="memberPhoneNO" property="memberPhoneNO" />
		</association>
		<association property="ProfessorVO" javaType="ProfessorVO">
			<result column="professorMajor" property="professorMajor" />
			<result column="professorRank" property="professorRank" />
		</association>
	</resultMap>

	<!-- Select Start -->
	<select id="getClassList" resultMap="classInfo">
		select class.*,member.memberName, nvl(a.classCurrentPersonnel,0)AS classCurrentPersonnel
		from class
		LEFT JOIN member
		ON class.memberNO = member.memberNO
		LEFT JOIN (SELECT classNO, COUNT(classNO)as classCurrentPersonnel FROM score GROUP BY CLASSNO) a
		ON
		a.classNO = class.classNO
	</select>

	<select id="getStudentClassList" parameterType="string" resultMap="classInfo">
		SELECT a.*, member.memberName, b.classCurrentPersonnel
		FROM
		(select class.*
		FROM class, score
		WHERE class.classNO = score.classNO
		AND score.memberNO = #{memberNO}
		)a
		JOIN member
		ON a.memberNO = member.memberNO
		JOIN (SELECT classNO,
		COUNT(classNO)as classCurrentPersonnel FROM score GROUP BY CLASSNO) b
		ON b.classNO = a.classNO
		order by a.classNO
	</select>

	<select id="checkClassApply" parameterType="java.util.HashMap" resultType="int">
		SELECT count(*)
		FROM score
		WHERE classNO = #{classNO} and memberNO = #{memberNO}
	</select>

	<select id="getClassPersonnel" parameterType="string" resultType="int">
		SELECT classPersonnel
		FROM class
		WHERE classNO = #{classNO}
	</select>

	<select id="getCurrentClassPersonnel" parameterType="string" resultType="int">
		SELECT count(*)
		FROM score
		WHERE classNO = #{classNO}
	</select>

	<select id="getCurrentStudentCredit" parameterType="string" resultType="int">
		SELECT NVL(SUM(class.classCredit),0)
		FROM class INNER JOIN score
		ON class.classNO = score.CLASSNO
		WHERE score.MEMBERNO = #{memberNO}

	</select>

	<select id="getClassCredit" parameterType="string" resultType="int">
		SELECT classCredit
		FROM class
		WHERE classNO = #{classNO}

	</select>

	<select id="getClassInfo" parameterType="string" resultMap="classInfo">
		SELECT class.*, member.*, professor.*
		FROM class, member, PROFESSOR
		WHERE class.memberNO = member.memberNO AND member.memberNO = professor.professorNO
		AND classNO = #{classNO}
	</select>

	<resultMap type="java.util.HashMap" id="scoreInfo">
		<association property="ScoreVO" javaType="ScoreVO">
			<result column="classNO" property="classNO" />
			<result column="midtermScore" property="midtermScore" />
			<result column="finalsScore" property="finalsScore" />
			<result column="assignmentScore" property="assignmentScore" />
			<result column="attendanceScore" property="attendanceScore" />
			<result column="grade" property="grade" />
		</association>

		<association property="ClassVO" javaType="ClassVO">
			<result column="className" property="className" />
		</association>
	</resultMap>

	<select id="getStudentScoreList" parameterType="string" resultMap="scoreInfo">
		SELECT score.classNO, nvl(midtermScore,0) AS midtermScore, nvl(finalsScore,0)AS finalsScore,
		nvl(assignmentScore,0)AS
		assignmentScore, nvl(attendanceScore,0) AS attendanceScore, nvl(grade,'-') as grade, class.className
		FROM score ,class
		WHERE score.classNO = class.classNO AND score.memberNO =
		#{memberNO}
	</select>
	<!-- Select Finish -->

	<!-- Insert Start -->
	<insert id="studentApplyClass" parameterType="java.util.HashMap">
		INSERT INTO score(classNO, memberNO) VALUES (#{classNO},#{memberNO})
	</insert>
	<!-- Insert Finish -->

	<!-- Delete Start -->
	<delete id="studentDeleteClass" parameterType="java.util.HashMap">
		delete
		from score
		where memberNO = #{memberNO} AND classNO = #{classNO}
	</delete>
	<!-- Delete Finish -->
</mapper>